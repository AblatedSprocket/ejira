* JIRA integration to Emacs org-mode
** Features
- Two-way synchronization between JIRA and =org-mode=.
- Convert description fields from/to JIRA markup to/from org-markup.
- One-way push of =org-clock= data from =org-mode= to JIRA.
- Support for issues, epics, stories and subtasks

** Screenshots

#+CAPTION: Ticket view
[[./screenshot.png]]

#+CAPTION: Agenda view
[[./agenda.png]]

** Installation
Example configuration with =use-package=. Note, that for Ejira to work =org-id-track-globally= needs to be set to =t=, as =org-id=-lookups are heavily used by Ejira.
#+BEGIN_SRC elisp
  (use-package ejira
    :init
    (setq jiralib2-url             "https://jira.mycorp.com"
          jiralib2-auth            'cookie
          jiralib2-user-login-name "my-jira-username"
          jiralib2-token           nil
          ejira-org-directory      "~/jira"
          ejira-projects           '("EJ" "JL2")'
          ejira-sprint-field       'customfield_10001
          ejira-epic-field         'customfield_10002
          ejira-epic-summary-field 'customfield_10004
          ejira-priorities-alist   '(("Highest". ?A)
                                     ("High"   . ?B)
                                     ("Medium" . ?C)
                                     ("Low"    . ?D)
                                     ("Lowest" . ?E))
          ejira-todo-states-alist  '(("To Do"       . 1)
                                     ("In Progress" . 2)
                                     ("Done"        . 3)))
    :config
    (require 'ejira-agenda)
    (org-add-agenda-custom-command ejira-sprint-agenda))
#+END_SRC

** Project file structure
Each project will be synchronized into its own file, which is named as the project code with an =.org=-extension. The file is located inside =ejira-org-directory=. All the data related to the project will be inside this project file. It can also contain extra org headings anywhere except inside the reserved "Description" and "Comments" headers. Ejira will not touch those headings but their clock entries get included in the total clocked hours for the task. This is useful, if for example one wishes to log the work hours from a meeting into a JIRA task, one can just refile the captured meeting notes under the specific Ejira ticket and the hours will be included. The meeting notes will also be visible when viewing the item with =ejira-focus-on-issue=.

When a project in synced into a file, it's items get automatically refiled into a structure based on the hierarchy shown below. Not all levels need to be present, though, an issue or a story might not have an epic link, and thus will then be refiled directly under the project, for instance. The heading levels are dynamic, so the amount of asterisks for an issue depends on whether it has an epic link or not.

#+BEGIN_SRC org
  ,* Project
  ,** Epic
  ,*** Issue/Task
  ,*** Story
  ,**** Subtask
#+END_SRC

If the items are updated and these relationships change, the items are automatically refiled to reflect the structure in the server.

** Usage
TODO
